CC       = mpicc
CPP      = /lib/cpp
FC       = gfortran
LD       = mpif90
AR       = /usr/bin/ar -r
LIBXC_INC  = LIBXCPATH/include
LIBXC_LIB  = LIBXCPATH/lib
DFLAGS   = -D__GFORTRAN -D__FFTSG -D__parallel -D__BLACS -D__SCALAPACK -D__FFTW3 -D__LIBINT -D__LIBXC2  -D__LIBINT_MAX_AM=6 -D__LIBDERIV_MAX_AM1=5  CUDADEFS
FFTW_INC = ROLLFFTW/include
CPPFLAGS =  $(DFLAGS) -P -traditional -I$(FFTW_INC) -I$(LIBXC_INC)
FCFLAGS  = $(DFLAGS)  -I/usr/include -I$(LIBXC_INC) -funroll-loops -ffree-form -O2 -ffast-math -I$(FFTW_INC)
LDFLAGS  = $(FCFLAGS)
INTEL_LIB = MKL_ROOT/lib/intel64
LIBS     = $(INTEL_LIB)/libmkl_scalapack_lp64.a  -Wl,--start-group $(INTEL_LIB)/libmkl_gf_lp64.a $(INTEL_LIB)/libmkl_sequential.a $(INTEL_LIB)/libmkl_core.a $(INTEL_LIB)/libmkl_blacs_INTELMPITYPE_lp64.a -Wl,--end-group -lpthread  -LROLLFFTW/lib -lfftw3 -LLIBINTPATH -L$(LIBXC_LIB) -lxc -lxcf90 -lderiv -lint -lr12 -lstdc++ -ldl CUDALIBS -lm

NVCC = NVCCPATH
NVFLAGS = $(DFLAGS) -O2 -gencode arch=compute_20,code=sm_20 -gencode arch=compute_30,code=sm_30

OBJECTS_ARCHITECTURE = machine_gfortran.o
