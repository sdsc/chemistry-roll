--- gromacs-2018/cmake/gmxManageGPU.cmake	2018-01-09 13:28:45.000000000 -0800
+++ patch-files/gmxManageGPU.cmake	2018-09-14 15:14:46.043808665 -0700
@@ -277,23 +277,23 @@
 
             if(GMX_CHECK_NVCC OR NOT GMX_NVCC_WORKS)
                 message(STATUS "Check for working NVCC/C compiler combination")
-                execute_process(COMMAND ${CUDA_NVCC_EXECUTABLE} -ccbin ${CUDA_HOST_COMPILER} -c ${CUDA_NVCC_FLAGS} ${CMAKE_SOURCE_DIR}/cmake/TestCUDA.cu
-                                RESULT_VARIABLE _cuda_test_res
-                                OUTPUT_VARIABLE _cuda_test_out
-                                ERROR_VARIABLE  _cuda_test_err
-                                OUTPUT_STRIP_TRAILING_WHITESPACE)
-
-                if(${_cuda_test_res})
-                    message(STATUS "Check for working NVCC/C compiler combination - broken")
-                    if(${_cuda_test_err} MATCHES "nsupported")
-                        message(FATAL_ERROR "NVCC/C compiler combination does not seem to be supported. CUDA frequently does not support the latest versions of the host compiler, so you might want to try an earlier C/C++ compiler version and make sure your CUDA compiler and driver are as recent as possible.")
-                    else()
-                        message(FATAL_ERROR "CUDA compiler does not seem to be functional.")
-                    endif()
-                elseif(NOT GMX_CUDA_TEST_COMPILER_QUIETLY)
-                    message(STATUS "Check for working NVCC/C compiler combination - works")
+#               execute_process(COMMAND ${CUDA_NVCC_EXECUTABLE} -ccbin ${CUDA_HOST_COMPILER} -c ${CUDA_NVCC_FLAGS} ${CMAKE_SOURCE_DIR}/cmake/TestCUDA.cu
+#                               RESULT_VARIABLE _cuda_test_res
+#                               OUTPUT_VARIABLE _cuda_test_out
+#                               ERROR_VARIABLE  _cuda_test_err
+#                               OUTPUT_STRIP_TRAILING_WHITESPACE)
+#
+#               if(${_cuda_test_res})
+#                   message(STATUS "Check for working NVCC/C compiler combination - broken")
+#                   if(${_cuda_test_err} MATCHES "nsupported")
+#                       message(FATAL_ERROR "NVCC/C compiler combination does not seem to be supported. CUDA frequently does not support the latest versions of the host compiler, so you might want to try an earlier C/C++ compiler version and make sure your CUDA compiler and driver are as recent as possible.")
+#                   else()
+#                       message(FATAL_ERROR "CUDA compiler does not seem to be functional.")
+#                   endif()
+#               elseif(NOT GMX_CUDA_TEST_COMPILER_QUIETLY)
+#                   message(STATUS "Check for working NVCC/C compiler combination - works")
                     set(GMX_NVCC_WORKS TRUE CACHE INTERNAL "Nvcc can compile a trivial test program")
-                endif()
+#               endif()
             endif() # GMX_CHECK_NVCC
         endif() #GMX_CLANG_CUDA
     endif() # GMX_GPU
